@import url('https://fonts.googleapis.com/css2?family=Open+Sans&display=swap');

:root {
  --success-color: #2ecc71;
  --error-color: #e74c3c;
}

* {
  box-sizing: border-box;
}

body {
  background-color: #f9fafb;
  font-family: 'Open Sans', sans-serif;
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  margin: 0;
}

.container {
  background-color: #fff;
  border-radius: 5px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
  width: 480px;
}

h2 {
  text-align: center;
  margin: 0 0 20px;
}

.form {
  /* padding shorthand with 2 values: top/bottom left/right */
  padding: 30px 40px;
}

.form-control {
  margin-bottom: 10px;
  padding-bottom: 20px;
  position: relative; /*  ***    */
}

.form-control label {
  color: #777;
  display: block; /* +++ */
  margin: 5px;
}

.form-control input {
  border: 2px solid #f0f0f0;
  border-radius: 4px;
  display: block; /* so they are in their own line*/
  width: 100%; /* 100% of the width of its container*/
  padding: 10px;
  font-size: 14px;
}

.form-control input:focus {
  outline: 0;
  border-color: #777;
}

.form-control.success input {
  /* 000 */
  border-color: var(--success-color);
}

/*If the form control div has an error class attached to it, the input will have a border of color red which we put in a very custom property.*/
.form-control.error input {
  /* 000*/
  border-color: var(--error-color);
}

.form-control small {
  color: var(--error-color);
  position: absolute; /*  ***   */
  bottom: 0;
  left: 0;
  visibility: hidden;   (small elem. is hidden by default)
}

.form-control.error small {
  visibility: visible;
}

.form button {
  cursor: pointer;
  background-color: #3498db;
  border: 2px solid #3498db;
  border-radius: 2px;
  color: #fff;
  display: block;
  font-size: 16px;
  padding: 10px;
  margin-top: 20px;
  width: 100%;
}

/*  *** => because we position the small tag(error message) absolute within the form-control.
So if you want to position something absolute within another element the parent element has to be relative*/

/* +++ => diplay-block so they go on their own line (because labels are in-line by default) */

/* this will happen dinamically with JS */ ;
